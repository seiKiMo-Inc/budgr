datasource db {
    provider = "mongodb"
    url      = env("MONGODB_URI")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id String @id @map("_id")
    username String @unique

    // --- Relations ---

    profile Profile?
    messages Message[]
    conversations Participant[]
}

model Profile {
    id String @id @map("_id") @default(auto()) @db.ObjectId
    displayName String?
    timezone String?

    // --- Relations ---

    userId String @unique
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Participant {
    id String @id @map("_id") @default(auto()) @db.ObjectId

    conversationId String
    conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

    userId String
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([conversationId, userId])
    @@index([userId])
}

model Conversation {
    /** A conversation's ID is a Snowflake! */
    id String @id @map("_id")

    name String @default("The Next Big Thing")
    description String?
    updatedAt DateTime @default(now()) @updatedAt

    // --- Relations ---

    messages Message[]
    participants Participant[]
}

model Message {
    /** A message's ID is a Snowflake! */
    id String @id @map("_id")
    content String

    // --- Relations ---

    conversationId String
    conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

    senderId String
    sender User @relation(fields: [senderId], references: [id], onDelete: NoAction)

    @@index([conversationId])
    @@index([senderId])
}
